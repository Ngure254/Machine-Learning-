# -*- coding: utf-8 -*-
"""Regression model

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17I9Hqx1K7zL8ZeNK4hDiHeL0b2DMLKI8
"""

from scipy.stats import uniform
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from numpy import random

s=100
w=0.3
b=7

fake_data={'Office size':random.uniform(50,500,s),'Office price':random.uniform(3000,8000,s)}

pd.DataFrame(fake_data)

x=fake_data['Office size']
y=fake_data['Office price']

# Mean X and Y
mean_x = np.mean(x)
mean_y = np.mean(y)
 
# Total number of values
n = len(x)

# Using the formula to calculate 'm' and 'c'
numer = 0
denom = 0

for i in range(n): 
 numer += (x[i] - mean_x) * (y[i] - mean_y)
denom+=(x[i] - mean_x) ** 2

m = numer / denom
c = mean_y - (m * mean_x)

# Printing coefficients
print("Coefficients")
print(m, c)

# Plotting Values and Regression Line
 
max_x = np.max(x) + 100
min_x = np.min(x) - 100

# Calculating line values x and y
x = np.linspace(min_x, max_x, 1000)
y = c + m * x

# Ploting Line
plt.plot(x, y, label='Regression Line')
# Ploting Scatter Points
plt.scatter(x, y, label='Scatter Plot')